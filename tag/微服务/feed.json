{
    "version": "https://jsonfeed.org/version/1",
    "title": "完美 • All posts by \"微服务\" tag",
    "description": "",
    "home_page_url": "https://Createdestruction/perfect.github.io",
    "items": [
        {
            "id": "https://createdestruction/perfect.github.io/2020/10/03/2020-10/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%A6%82%E5%BF%B5/",
            "url": "https://createdestruction/perfect.github.io/2020/10/03/2020-10/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%A6%82%E5%BF%B5/",
            "title": "什么是微服务",
            "date_published": "2020-10-03T09:32:00.000Z",
            "content_html": "<h2 id=\"什么是微服务\"><a href=\"#什么是微服务\" class=\"headerlink\" title=\"什么是微服务\"></a>什么是微服务</h2><p>微服务化的核心就是将传统的一站式应用，根据业务拆分成一个一个的服务，彻底地去耦合，每一个微服务提供单个业务功能的服务，一个服务做一件事，<br>从技术角度看就是一种小而独立的处理过程，类似进程概念，能够自行单独启动或销毁，拥有自己独立的数据库</p>\n<h3 id=\"微服务与微服务框架的区别\"><a href=\"#微服务与微服务框架的区别\" class=\"headerlink\" title=\"微服务与微服务框架的区别\"></a>微服务与微服务框架的区别</h3><ul>\n<li><strong>微服务:</strong>    对外形成一个架构体系 ，它强调的是服务的大小，关注的是某个点  就比如eclipse里面一个个的微服务工程，再比如，微服务就像医院里面一个一个的科室。</li>\n<li><strong>微服务架构：</strong>  是一种架构模式，提倡将单一的应用根据业务拆分成一个个的服务，服务之间相互协调，互相配合。每个服务都在其运行的进程中。服务与服务之间可以相互调用   相当于大医院。。</li>\n</ul>\n<h3 id=\"springCloud和Dubbo有哪些区别\"><a href=\"#springCloud和Dubbo有哪些区别\" class=\"headerlink\" title=\"springCloud和Dubbo有哪些区别\"></a>springCloud和Dubbo有哪些区别</h3><table>\n<thead>\n<tr>\n<th><strong>功能名称</strong></th>\n<th><strong>Dubbo</strong></th>\n<th><strong>Spring Cloud</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td>服务注册中心</td>\n<td>ZooKeeper</td>\n<td>Spring Cloud Netflix Eureka</td>\n</tr>\n<tr>\n<td>服务调用方式</td>\n<td>RPC</td>\n<td>REST API</td>\n</tr>\n<tr>\n<td>服务网关</td>\n<td>无</td>\n<td>Spring Cloud Netflix Zuul</td>\n</tr>\n<tr>\n<td>断路器</td>\n<td>不完善</td>\n<td>Spring Cloud Netflix Hystrix</td>\n</tr>\n<tr>\n<td>分布式配置</td>\n<td>无</td>\n<td>Spring Cloud Config</td>\n</tr>\n<tr>\n<td>服务跟踪</td>\n<td>无</td>\n<td>Spring Cloud Sleuth</td>\n</tr>\n<tr>\n<td>消息总线</td>\n<td>无</td>\n<td>Spring Cloud Bus</td>\n</tr>\n<tr>\n<td>数据流</td>\n<td>无</td>\n<td>Spring Cloud Stream</td>\n</tr>\n<tr>\n<td>批量任务</td>\n<td>无</td>\n<td>Spring Cloud Task</td>\n</tr>\n</tbody></table>\n<h3 id=\"SpringBoot和SpringCloud\"><a href=\"#SpringBoot和SpringCloud\" class=\"headerlink\" title=\"SpringBoot和SpringCloud\"></a>SpringBoot和SpringCloud</h3><ul>\n<li>​     SpringBoot只是一个快速开发框架，使用注解简化了xml配置，内置了Servlet容器，以Java应用程序进行执行。</li>\n<li>​    SpringCloud是一系列框架的集合，可以包含SpringBoot。</li>\n</ul>\n<h3 id=\"微服务技术栈有哪些\"><a href=\"#微服务技术栈有哪些\" class=\"headerlink\" title=\"微服务技术栈有哪些\"></a>微服务技术栈有哪些</h3><table>\n<thead>\n<tr>\n<th>微服务条目</th>\n<th>技术</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>服务开发</td>\n<td>Springboot、Spring、SpringMVC</td>\n</tr>\n<tr>\n<td>服务配置与管理</td>\n<td>Netflix公司的Archaius、阿里的Diamond等</td>\n</tr>\n<tr>\n<td>服务注册与发现</td>\n<td>Eureka、Consul、Zookeeper等</td>\n</tr>\n<tr>\n<td>服务调用</td>\n<td>REST、RPC、gRPC</td>\n</tr>\n<tr>\n<td>服务熔断器</td>\n<td>Hystrix、Envoy等</td>\n</tr>\n<tr>\n<td>负载均衡</td>\n<td>Ribbon、Nginx等</td>\n</tr>\n<tr>\n<td>服务接口调用（客户端调用服务发简单工具）</td>\n<td>Feign等</td>\n</tr>\n<tr>\n<td>消息队列</td>\n<td>kafka、RabbitMQ、ActiveMQ等</td>\n</tr>\n<tr>\n<td>服务配置中心管理</td>\n<td>SpringCloudConfig、Chef等</td>\n</tr>\n<tr>\n<td>服务路由（API网关）</td>\n<td>Zuul等</td>\n</tr>\n<tr>\n<td>服务监控</td>\n<td>Zabbix、Nagios、Metrics、Spectator等</td>\n</tr>\n<tr>\n<td>全链路追踪</td>\n<td>Zipkin、Brave、Dapper等</td>\n</tr>\n<tr>\n<td>服务部署</td>\n<td>Docker、OpenStack、Kubernetes等</td>\n</tr>\n<tr>\n<td>数据流操作开发包</td>\n<td>SpringCloud   Stream（封装与Redis，Rabbit、Kafka等发送接收消息）</td>\n</tr>\n<tr>\n<td>事件消息总线</td>\n<td>SpringCloud Bus</td>\n</tr>\n</tbody></table>\n",
            "tags": [
                "微服务"
            ]
        }
    ]
}